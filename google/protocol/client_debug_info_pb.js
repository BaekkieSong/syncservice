/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var get_updates_caller_info_pb = require('./get_updates_caller_info_pb.js');
goog.object.extend(proto, get_updates_caller_info_pb);
var sync_enums_pb = require('./sync_enums_pb.js');
goog.object.extend(proto, sync_enums_pb);
goog.exportSymbol('proto.sync_pb.DatatypeAssociationStats', null, global);
goog.exportSymbol('proto.sync_pb.DebugEventInfo', null, global);
goog.exportSymbol('proto.sync_pb.DebugInfo', null, global);
goog.exportSymbol('proto.sync_pb.DeprecatedMessage', null, global);
goog.exportSymbol('proto.sync_pb.SyncCycleCompletedEventInfo', null, global);
goog.exportSymbol('proto.sync_pb.TypeHint', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.TypeHint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.TypeHint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.TypeHint.displayName = 'proto.sync_pb.TypeHint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.DeprecatedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.DeprecatedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.DeprecatedMessage.displayName = 'proto.sync_pb.DeprecatedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.SyncCycleCompletedEventInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sync_pb.SyncCycleCompletedEventInfo.repeatedFields_, null);
};
goog.inherits(proto.sync_pb.SyncCycleCompletedEventInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.SyncCycleCompletedEventInfo.displayName = 'proto.sync_pb.SyncCycleCompletedEventInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.DatatypeAssociationStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sync_pb.DatatypeAssociationStats.repeatedFields_, null);
};
goog.inherits(proto.sync_pb.DatatypeAssociationStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.DatatypeAssociationStats.displayName = 'proto.sync_pb.DatatypeAssociationStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.DebugEventInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sync_pb.DebugEventInfo.repeatedFields_, null);
};
goog.inherits(proto.sync_pb.DebugEventInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.DebugEventInfo.displayName = 'proto.sync_pb.DebugEventInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.DebugInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sync_pb.DebugInfo.repeatedFields_, null);
};
goog.inherits(proto.sync_pb.DebugInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.DebugInfo.displayName = 'proto.sync_pb.DebugInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.TypeHint.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.TypeHint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.TypeHint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.TypeHint.toObject = function(includeInstance, msg) {
  var obj = {
    dataTypeId: jspb.Message.getField(msg, 1),
    hasValidHint: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.TypeHint}
 */
proto.sync_pb.TypeHint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.TypeHint;
  return proto.sync_pb.TypeHint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.TypeHint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.TypeHint}
 */
proto.sync_pb.TypeHint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDataTypeId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasValidHint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.TypeHint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.TypeHint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.TypeHint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.TypeHint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int32 data_type_id = 1;
 * @return {number}
 */
proto.sync_pb.TypeHint.prototype.getDataTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.sync_pb.TypeHint.prototype.setDataTypeId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.TypeHint.prototype.clearDataTypeId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.TypeHint.prototype.hasDataTypeId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool has_valid_hint = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.TypeHint.prototype.getHasValidHint = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.sync_pb.TypeHint.prototype.setHasValidHint = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.TypeHint.prototype.clearHasValidHint = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.TypeHint.prototype.hasHasValidHint = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.DeprecatedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.DeprecatedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.DeprecatedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.DeprecatedMessage.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.DeprecatedMessage}
 */
proto.sync_pb.DeprecatedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.DeprecatedMessage;
  return proto.sync_pb.DeprecatedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.DeprecatedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.DeprecatedMessage}
 */
proto.sync_pb.DeprecatedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.DeprecatedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.DeprecatedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.DeprecatedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.DeprecatedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sync_pb.SyncCycleCompletedEventInfo.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.SyncCycleCompletedEventInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.SyncCycleCompletedEventInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.SyncCycleCompletedEventInfo.toObject = function(includeInstance, msg) {
  var obj = {
    numBlockingConflicts: jspb.Message.getField(msg, 2),
    numNonBlockingConflicts: jspb.Message.getField(msg, 3),
    numEncryptionConflicts: jspb.Message.getField(msg, 4),
    numHierarchyConflicts: jspb.Message.getField(msg, 5),
    numSimpleConflicts: jspb.Message.getField(msg, 6),
    numServerConflicts: jspb.Message.getField(msg, 7),
    numUpdatesDownloaded: jspb.Message.getField(msg, 8),
    numReflectedUpdatesDownloaded: jspb.Message.getField(msg, 9),
    callerInfo: (f = msg.getCallerInfo()) && get_updates_caller_info_pb.GetUpdatesCallerInfo.toObject(includeInstance, f),
    sourceInfoList: jspb.Message.toObjectList(msg.getSourceInfoList(),
    proto.sync_pb.DeprecatedMessage.toObject, includeInstance),
    getUpdatesOrigin: jspb.Message.getField(msg, 12)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.SyncCycleCompletedEventInfo}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.SyncCycleCompletedEventInfo;
  return proto.sync_pb.SyncCycleCompletedEventInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.SyncCycleCompletedEventInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.SyncCycleCompletedEventInfo}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumBlockingConflicts(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumNonBlockingConflicts(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumEncryptionConflicts(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumHierarchyConflicts(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumSimpleConflicts(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumServerConflicts(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumUpdatesDownloaded(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumReflectedUpdatesDownloaded(value);
      break;
    case 10:
      var value = new get_updates_caller_info_pb.GetUpdatesCallerInfo;
      reader.readMessage(value,get_updates_caller_info_pb.GetUpdatesCallerInfo.deserializeBinaryFromReader);
      msg.setCallerInfo(value);
      break;
    case 11:
      var value = new proto.sync_pb.DeprecatedMessage;
      reader.readMessage(value,proto.sync_pb.DeprecatedMessage.deserializeBinaryFromReader);
      msg.addSourceInfo(value);
      break;
    case 12:
      var value = /** @type {!proto.sync_pb.SyncEnums.GetUpdatesOrigin} */ (reader.readEnum());
      msg.setGetUpdatesOrigin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.SyncCycleCompletedEventInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.SyncCycleCompletedEventInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.SyncCycleCompletedEventInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getCallerInfo();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      get_updates_caller_info_pb.GetUpdatesCallerInfo.serializeBinaryToWriter
    );
  }
  f = message.getSourceInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.sync_pb.DeprecatedMessage.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.sync_pb.SyncEnums.GetUpdatesOrigin} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeEnum(
      12,
      f
    );
  }
};


/**
 * optional int32 num_blocking_conflicts = 2;
 * @return {number}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.getNumBlockingConflicts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.setNumBlockingConflicts = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.clearNumBlockingConflicts = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.hasNumBlockingConflicts = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 num_non_blocking_conflicts = 3;
 * @return {number}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.getNumNonBlockingConflicts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.setNumNonBlockingConflicts = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.clearNumNonBlockingConflicts = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.hasNumNonBlockingConflicts = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 num_encryption_conflicts = 4;
 * @return {number}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.getNumEncryptionConflicts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.setNumEncryptionConflicts = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.clearNumEncryptionConflicts = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.hasNumEncryptionConflicts = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 num_hierarchy_conflicts = 5;
 * @return {number}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.getNumHierarchyConflicts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.setNumHierarchyConflicts = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.clearNumHierarchyConflicts = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.hasNumHierarchyConflicts = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 num_simple_conflicts = 6;
 * @return {number}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.getNumSimpleConflicts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.setNumSimpleConflicts = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.clearNumSimpleConflicts = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.hasNumSimpleConflicts = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 num_server_conflicts = 7;
 * @return {number}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.getNumServerConflicts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.setNumServerConflicts = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.clearNumServerConflicts = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.hasNumServerConflicts = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 num_updates_downloaded = 8;
 * @return {number}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.getNumUpdatesDownloaded = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.setNumUpdatesDownloaded = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.clearNumUpdatesDownloaded = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.hasNumUpdatesDownloaded = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 num_reflected_updates_downloaded = 9;
 * @return {number}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.getNumReflectedUpdatesDownloaded = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.setNumReflectedUpdatesDownloaded = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.clearNumReflectedUpdatesDownloaded = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.hasNumReflectedUpdatesDownloaded = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional GetUpdatesCallerInfo caller_info = 10;
 * @return {?proto.sync_pb.GetUpdatesCallerInfo}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.getCallerInfo = function() {
  return /** @type{?proto.sync_pb.GetUpdatesCallerInfo} */ (
    jspb.Message.getWrapperField(this, get_updates_caller_info_pb.GetUpdatesCallerInfo, 10));
};


/** @param {?proto.sync_pb.GetUpdatesCallerInfo|undefined} value */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.setCallerInfo = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.clearCallerInfo = function() {
  this.setCallerInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.hasCallerInfo = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated DeprecatedMessage source_info = 11;
 * @return {!Array<!proto.sync_pb.DeprecatedMessage>}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.getSourceInfoList = function() {
  return /** @type{!Array<!proto.sync_pb.DeprecatedMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sync_pb.DeprecatedMessage, 11));
};


/** @param {!Array<!proto.sync_pb.DeprecatedMessage>} value */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.setSourceInfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.sync_pb.DeprecatedMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sync_pb.DeprecatedMessage}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.addSourceInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.sync_pb.DeprecatedMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.clearSourceInfoList = function() {
  this.setSourceInfoList([]);
};


/**
 * optional SyncEnums.GetUpdatesOrigin get_updates_origin = 12;
 * @return {!proto.sync_pb.SyncEnums.GetUpdatesOrigin}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.getGetUpdatesOrigin = function() {
  return /** @type {!proto.sync_pb.SyncEnums.GetUpdatesOrigin} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {!proto.sync_pb.SyncEnums.GetUpdatesOrigin} value */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.setGetUpdatesOrigin = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.clearGetUpdatesOrigin = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.SyncCycleCompletedEventInfo.prototype.hasGetUpdatesOrigin = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sync_pb.DatatypeAssociationStats.repeatedFields_ = [18,19];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.DatatypeAssociationStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.DatatypeAssociationStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.DatatypeAssociationStats.toObject = function(includeInstance, msg) {
  var obj = {
    dataTypeId: jspb.Message.getField(msg, 1),
    numLocalItemsBeforeAssociation: jspb.Message.getField(msg, 2),
    numSyncItemsBeforeAssociation: jspb.Message.getField(msg, 3),
    numLocalItemsAfterAssociation: jspb.Message.getField(msg, 4),
    numSyncItemsAfterAssociation: jspb.Message.getField(msg, 5),
    numLocalItemsAdded: jspb.Message.getField(msg, 6),
    numLocalItemsDeleted: jspb.Message.getField(msg, 7),
    numLocalItemsModified: jspb.Message.getField(msg, 8),
    numSyncItemsAdded: jspb.Message.getField(msg, 9),
    numSyncItemsDeleted: jspb.Message.getField(msg, 10),
    numSyncItemsModified: jspb.Message.getField(msg, 11),
    localVersionPreAssociation: jspb.Message.getField(msg, 20),
    syncVersionPreAssociation: jspb.Message.getField(msg, 21),
    hadError: jspb.Message.getField(msg, 12),
    downloadWaitTimeUs: jspb.Message.getField(msg, 15),
    downloadTimeUs: jspb.Message.getField(msg, 13),
    associationWaitTimeForHighPriorityUs: jspb.Message.getField(msg, 16),
    associationWaitTimeForSamePriorityUs: jspb.Message.getField(msg, 14),
    associationTimeUs: jspb.Message.getField(msg, 17),
    highPriorityTypeConfiguredBeforeList: jspb.Message.getRepeatedField(msg, 18),
    samePriorityTypeConfiguredBeforeList: jspb.Message.getRepeatedField(msg, 19)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.DatatypeAssociationStats}
 */
proto.sync_pb.DatatypeAssociationStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.DatatypeAssociationStats;
  return proto.sync_pb.DatatypeAssociationStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.DatatypeAssociationStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.DatatypeAssociationStats}
 */
proto.sync_pb.DatatypeAssociationStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDataTypeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumLocalItemsBeforeAssociation(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumSyncItemsBeforeAssociation(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumLocalItemsAfterAssociation(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumSyncItemsAfterAssociation(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumLocalItemsAdded(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumLocalItemsDeleted(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumLocalItemsModified(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumSyncItemsAdded(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumSyncItemsDeleted(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumSyncItemsModified(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLocalVersionPreAssociation(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSyncVersionPreAssociation(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHadError(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDownloadWaitTimeUs(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDownloadTimeUs(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAssociationWaitTimeForHighPriorityUs(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAssociationWaitTimeForSamePriorityUs(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAssociationTimeUs(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addHighPriorityTypeConfiguredBefore(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addSamePriorityTypeConfiguredBefore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.DatatypeAssociationStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.DatatypeAssociationStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.DatatypeAssociationStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getHighPriorityTypeConfiguredBeforeList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      18,
      f
    );
  }
  f = message.getSamePriorityTypeConfiguredBeforeList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      19,
      f
    );
  }
};


/**
 * optional int32 data_type_id = 1;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getDataTypeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setDataTypeId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearDataTypeId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasDataTypeId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 num_local_items_before_association = 2;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getNumLocalItemsBeforeAssociation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setNumLocalItemsBeforeAssociation = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearNumLocalItemsBeforeAssociation = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasNumLocalItemsBeforeAssociation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 num_sync_items_before_association = 3;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getNumSyncItemsBeforeAssociation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setNumSyncItemsBeforeAssociation = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearNumSyncItemsBeforeAssociation = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasNumSyncItemsBeforeAssociation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 num_local_items_after_association = 4;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getNumLocalItemsAfterAssociation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setNumLocalItemsAfterAssociation = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearNumLocalItemsAfterAssociation = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasNumLocalItemsAfterAssociation = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 num_sync_items_after_association = 5;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getNumSyncItemsAfterAssociation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setNumSyncItemsAfterAssociation = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearNumSyncItemsAfterAssociation = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasNumSyncItemsAfterAssociation = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 num_local_items_added = 6;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getNumLocalItemsAdded = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setNumLocalItemsAdded = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearNumLocalItemsAdded = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasNumLocalItemsAdded = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 num_local_items_deleted = 7;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getNumLocalItemsDeleted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setNumLocalItemsDeleted = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearNumLocalItemsDeleted = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasNumLocalItemsDeleted = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 num_local_items_modified = 8;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getNumLocalItemsModified = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setNumLocalItemsModified = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearNumLocalItemsModified = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasNumLocalItemsModified = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 num_sync_items_added = 9;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getNumSyncItemsAdded = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setNumSyncItemsAdded = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearNumSyncItemsAdded = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasNumSyncItemsAdded = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 num_sync_items_deleted = 10;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getNumSyncItemsDeleted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setNumSyncItemsDeleted = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearNumSyncItemsDeleted = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasNumSyncItemsDeleted = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 num_sync_items_modified = 11;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getNumSyncItemsModified = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setNumSyncItemsModified = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearNumSyncItemsModified = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasNumSyncItemsModified = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int64 local_version_pre_association = 20;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getLocalVersionPreAssociation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setLocalVersionPreAssociation = function(value) {
  jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearLocalVersionPreAssociation = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasLocalVersionPreAssociation = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional int64 sync_version_pre_association = 21;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getSyncVersionPreAssociation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setSyncVersionPreAssociation = function(value) {
  jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearSyncVersionPreAssociation = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasSyncVersionPreAssociation = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool had_error = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getHadError = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setHadError = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearHadError = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasHadError = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int64 download_wait_time_us = 15;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getDownloadWaitTimeUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setDownloadWaitTimeUs = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearDownloadWaitTimeUs = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasDownloadWaitTimeUs = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int64 download_time_us = 13;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getDownloadTimeUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setDownloadTimeUs = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearDownloadTimeUs = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasDownloadTimeUs = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int64 association_wait_time_for_high_priority_us = 16;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getAssociationWaitTimeForHighPriorityUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setAssociationWaitTimeForHighPriorityUs = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearAssociationWaitTimeForHighPriorityUs = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasAssociationWaitTimeForHighPriorityUs = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int64 association_wait_time_for_same_priority_us = 14;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getAssociationWaitTimeForSamePriorityUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setAssociationWaitTimeForSamePriorityUs = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearAssociationWaitTimeForSamePriorityUs = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasAssociationWaitTimeForSamePriorityUs = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional int64 association_time_us = 17;
 * @return {number}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getAssociationTimeUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setAssociationTimeUs = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearAssociationTimeUs = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.hasAssociationTimeUs = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated int32 high_priority_type_configured_before = 18;
 * @return {!Array<number>}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getHighPriorityTypeConfiguredBeforeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 18));
};


/** @param {!Array<number>} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setHighPriorityTypeConfiguredBeforeList = function(value) {
  jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.sync_pb.DatatypeAssociationStats.prototype.addHighPriorityTypeConfiguredBefore = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearHighPriorityTypeConfiguredBeforeList = function() {
  this.setHighPriorityTypeConfiguredBeforeList([]);
};


/**
 * repeated int32 same_priority_type_configured_before = 19;
 * @return {!Array<number>}
 */
proto.sync_pb.DatatypeAssociationStats.prototype.getSamePriorityTypeConfiguredBeforeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 19));
};


/** @param {!Array<number>} value */
proto.sync_pb.DatatypeAssociationStats.prototype.setSamePriorityTypeConfiguredBeforeList = function(value) {
  jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.sync_pb.DatatypeAssociationStats.prototype.addSamePriorityTypeConfiguredBefore = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sync_pb.DatatypeAssociationStats.prototype.clearSamePriorityTypeConfiguredBeforeList = function() {
  this.setSamePriorityTypeConfiguredBeforeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sync_pb.DebugEventInfo.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.DebugEventInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.DebugEventInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.DebugEventInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.DebugEventInfo.toObject = function(includeInstance, msg) {
  var obj = {
    singletonEvent: jspb.Message.getField(msg, 1),
    syncCycleCompletedEventInfo: (f = msg.getSyncCycleCompletedEventInfo()) && proto.sync_pb.SyncCycleCompletedEventInfo.toObject(includeInstance, f),
    nudgingDatatype: jspb.Message.getField(msg, 3),
    datatypesNotifiedFromServerList: jspb.Message.getRepeatedField(msg, 4),
    datatypeAssociationStats: (f = msg.getDatatypeAssociationStats()) && proto.sync_pb.DatatypeAssociationStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.DebugEventInfo}
 */
proto.sync_pb.DebugEventInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.DebugEventInfo;
  return proto.sync_pb.DebugEventInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.DebugEventInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.DebugEventInfo}
 */
proto.sync_pb.DebugEventInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sync_pb.SyncEnums.SingletonDebugEventType} */ (reader.readEnum());
      msg.setSingletonEvent(value);
      break;
    case 2:
      var value = new proto.sync_pb.SyncCycleCompletedEventInfo;
      reader.readMessage(value,proto.sync_pb.SyncCycleCompletedEventInfo.deserializeBinaryFromReader);
      msg.setSyncCycleCompletedEventInfo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNudgingDatatype(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addDatatypesNotifiedFromServer(value);
      break;
    case 5:
      var value = new proto.sync_pb.DatatypeAssociationStats;
      reader.readMessage(value,proto.sync_pb.DatatypeAssociationStats.deserializeBinaryFromReader);
      msg.setDatatypeAssociationStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.DebugEventInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.DebugEventInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.DebugEventInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.DebugEventInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.sync_pb.SyncEnums.SingletonDebugEventType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSyncCycleCompletedEventInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sync_pb.SyncCycleCompletedEventInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDatatypesNotifiedFromServerList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      4,
      f
    );
  }
  f = message.getDatatypeAssociationStats();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.sync_pb.DatatypeAssociationStats.serializeBinaryToWriter
    );
  }
};


/**
 * optional SyncEnums.SingletonDebugEventType singleton_event = 1;
 * @return {!proto.sync_pb.SyncEnums.SingletonDebugEventType}
 */
proto.sync_pb.DebugEventInfo.prototype.getSingletonEvent = function() {
  return /** @type {!proto.sync_pb.SyncEnums.SingletonDebugEventType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/** @param {!proto.sync_pb.SyncEnums.SingletonDebugEventType} value */
proto.sync_pb.DebugEventInfo.prototype.setSingletonEvent = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DebugEventInfo.prototype.clearSingletonEvent = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DebugEventInfo.prototype.hasSingletonEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SyncCycleCompletedEventInfo sync_cycle_completed_event_info = 2;
 * @return {?proto.sync_pb.SyncCycleCompletedEventInfo}
 */
proto.sync_pb.DebugEventInfo.prototype.getSyncCycleCompletedEventInfo = function() {
  return /** @type{?proto.sync_pb.SyncCycleCompletedEventInfo} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.SyncCycleCompletedEventInfo, 2));
};


/** @param {?proto.sync_pb.SyncCycleCompletedEventInfo|undefined} value */
proto.sync_pb.DebugEventInfo.prototype.setSyncCycleCompletedEventInfo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.DebugEventInfo.prototype.clearSyncCycleCompletedEventInfo = function() {
  this.setSyncCycleCompletedEventInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DebugEventInfo.prototype.hasSyncCycleCompletedEventInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 nudging_datatype = 3;
 * @return {number}
 */
proto.sync_pb.DebugEventInfo.prototype.getNudgingDatatype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.sync_pb.DebugEventInfo.prototype.setNudgingDatatype = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DebugEventInfo.prototype.clearNudgingDatatype = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DebugEventInfo.prototype.hasNudgingDatatype = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated int32 datatypes_notified_from_server = 4;
 * @return {!Array<number>}
 */
proto.sync_pb.DebugEventInfo.prototype.getDatatypesNotifiedFromServerList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<number>} value */
proto.sync_pb.DebugEventInfo.prototype.setDatatypesNotifiedFromServerList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.sync_pb.DebugEventInfo.prototype.addDatatypesNotifiedFromServer = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sync_pb.DebugEventInfo.prototype.clearDatatypesNotifiedFromServerList = function() {
  this.setDatatypesNotifiedFromServerList([]);
};


/**
 * optional DatatypeAssociationStats datatype_association_stats = 5;
 * @return {?proto.sync_pb.DatatypeAssociationStats}
 */
proto.sync_pb.DebugEventInfo.prototype.getDatatypeAssociationStats = function() {
  return /** @type{?proto.sync_pb.DatatypeAssociationStats} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.DatatypeAssociationStats, 5));
};


/** @param {?proto.sync_pb.DatatypeAssociationStats|undefined} value */
proto.sync_pb.DebugEventInfo.prototype.setDatatypeAssociationStats = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.DebugEventInfo.prototype.clearDatatypeAssociationStats = function() {
  this.setDatatypeAssociationStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DebugEventInfo.prototype.hasDatatypeAssociationStats = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sync_pb.DebugInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.DebugInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.DebugInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.DebugInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.DebugInfo.toObject = function(includeInstance, msg) {
  var obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.sync_pb.DebugEventInfo.toObject, includeInstance),
    cryptographerReady: jspb.Message.getField(msg, 2),
    cryptographerHasPendingKeys: jspb.Message.getField(msg, 3),
    eventsDropped: jspb.Message.getField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.DebugInfo}
 */
proto.sync_pb.DebugInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.DebugInfo;
  return proto.sync_pb.DebugInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.DebugInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.DebugInfo}
 */
proto.sync_pb.DebugInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sync_pb.DebugEventInfo;
      reader.readMessage(value,proto.sync_pb.DebugEventInfo.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCryptographerReady(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCryptographerHasPendingKeys(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEventsDropped(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.DebugInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.DebugInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.DebugInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.DebugInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sync_pb.DebugEventInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * repeated DebugEventInfo events = 1;
 * @return {!Array<!proto.sync_pb.DebugEventInfo>}
 */
proto.sync_pb.DebugInfo.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.sync_pb.DebugEventInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sync_pb.DebugEventInfo, 1));
};


/** @param {!Array<!proto.sync_pb.DebugEventInfo>} value */
proto.sync_pb.DebugInfo.prototype.setEventsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sync_pb.DebugEventInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sync_pb.DebugEventInfo}
 */
proto.sync_pb.DebugInfo.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sync_pb.DebugEventInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sync_pb.DebugInfo.prototype.clearEventsList = function() {
  this.setEventsList([]);
};


/**
 * optional bool cryptographer_ready = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.DebugInfo.prototype.getCryptographerReady = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.sync_pb.DebugInfo.prototype.setCryptographerReady = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DebugInfo.prototype.clearCryptographerReady = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DebugInfo.prototype.hasCryptographerReady = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool cryptographer_has_pending_keys = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.DebugInfo.prototype.getCryptographerHasPendingKeys = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.sync_pb.DebugInfo.prototype.setCryptographerHasPendingKeys = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DebugInfo.prototype.clearCryptographerHasPendingKeys = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DebugInfo.prototype.hasCryptographerHasPendingKeys = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool events_dropped = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.DebugInfo.prototype.getEventsDropped = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.sync_pb.DebugInfo.prototype.setEventsDropped = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.DebugInfo.prototype.clearEventsDropped = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.DebugInfo.prototype.hasEventsDropped = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.sync_pb);
