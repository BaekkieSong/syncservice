/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var user_consent_types_pb = require('./user_consent_types_pb.js');
goog.object.extend(proto, user_consent_types_pb);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.FieldTrial', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.EventTrigger', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.EventTrigger', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.ReportingPopulation', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.InteractionResult', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.LookupResult', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.ReputationVerdict', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.LanguageDetection', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.LanguageDetection.Language', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.Test', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.Translation', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.Translation.Interaction', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.UserConsent', null, global);
goog.exportSymbol('proto.sync_pb.UserEventSpecifics.UserConsent.Feature', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.sync_pb.UserEventSpecifics.oneofGroups_);
};
goog.inherits(proto.sync_pb.UserEventSpecifics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.displayName = 'proto.sync_pb.UserEventSpecifics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.Test = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.Test, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.Test.displayName = 'proto.sync_pb.UserEventSpecifics.Test';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.FieldTrial = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sync_pb.UserEventSpecifics.FieldTrial.repeatedFields_, null);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.FieldTrial, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.FieldTrial.displayName = 'proto.sync_pb.UserEventSpecifics.FieldTrial';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sync_pb.UserEventSpecifics.LanguageDetection.repeatedFields_, null);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.LanguageDetection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.LanguageDetection.displayName = 'proto.sync_pb.UserEventSpecifics.LanguageDetection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.LanguageDetection.Language, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.displayName = 'proto.sync_pb.UserEventSpecifics.LanguageDetection.Language';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.Translation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.Translation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.Translation.displayName = 'proto.sync_pb.UserEventSpecifics.Translation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.UserConsent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sync_pb.UserEventSpecifics.UserConsent.repeatedFields_, proto.sync_pb.UserEventSpecifics.UserConsent.oneofGroups_);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.UserConsent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.UserConsent.displayName = 'proto.sync_pb.UserEventSpecifics.UserConsent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.displayName = 'proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.displayName = 'proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.displayName = 'proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.displayName = 'proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.displayName = 'proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.displayName = 'proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.displayName = 'proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sync_pb.UserEventSpecifics.oneofGroups_ = [[8,9,10,11,12,104,15]];

/**
 * @enum {number}
 */
proto.sync_pb.UserEventSpecifics.EventCase = {
  EVENT_NOT_SET: 0,
  TEST_EVENT: 8,
  FIELD_TRIAL_EVENT: 9,
  LANGUAGE_DETECTION_EVENT: 10,
  TRANSLATION_EVENT: 11,
  USER_CONSENT: 12,
  GAIA_PASSWORD_REUSE_EVENT: 104,
  GAIA_PASSWORD_CAPTURED_EVENT: 15
};

/**
 * @return {proto.sync_pb.UserEventSpecifics.EventCase}
 */
proto.sync_pb.UserEventSpecifics.prototype.getEventCase = function() {
  return /** @type {proto.sync_pb.UserEventSpecifics.EventCase} */(jspb.Message.computeOneofCase(this, proto.sync_pb.UserEventSpecifics.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.toObject = function(includeInstance, msg) {
  var obj = {
    eventTimeUsec: jspb.Message.getField(msg, 1),
    navigationId: jspb.Message.getField(msg, 2),
    sessionId: jspb.Message.getField(msg, 3),
    testEvent: (f = msg.getTestEvent()) && proto.sync_pb.UserEventSpecifics.Test.toObject(includeInstance, f),
    fieldTrialEvent: (f = msg.getFieldTrialEvent()) && proto.sync_pb.UserEventSpecifics.FieldTrial.toObject(includeInstance, f),
    languageDetectionEvent: (f = msg.getLanguageDetectionEvent()) && proto.sync_pb.UserEventSpecifics.LanguageDetection.toObject(includeInstance, f),
    translationEvent: (f = msg.getTranslationEvent()) && proto.sync_pb.UserEventSpecifics.Translation.toObject(includeInstance, f),
    userConsent: (f = msg.getUserConsent()) && proto.sync_pb.UserEventSpecifics.UserConsent.toObject(includeInstance, f),
    gaiaPasswordReuseEvent: (f = msg.getGaiaPasswordReuseEvent()) && proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.toObject(includeInstance, f),
    gaiaPasswordCapturedEvent: (f = msg.getGaiaPasswordCapturedEvent()) && proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics}
 */
proto.sync_pb.UserEventSpecifics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics;
  return proto.sync_pb.UserEventSpecifics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics}
 */
proto.sync_pb.UserEventSpecifics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEventTimeUsec(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNavigationId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setSessionId(value);
      break;
    case 8:
      var value = new proto.sync_pb.UserEventSpecifics.Test;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.Test.deserializeBinaryFromReader);
      msg.setTestEvent(value);
      break;
    case 9:
      var value = new proto.sync_pb.UserEventSpecifics.FieldTrial;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.FieldTrial.deserializeBinaryFromReader);
      msg.setFieldTrialEvent(value);
      break;
    case 10:
      var value = new proto.sync_pb.UserEventSpecifics.LanguageDetection;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.LanguageDetection.deserializeBinaryFromReader);
      msg.setLanguageDetectionEvent(value);
      break;
    case 11:
      var value = new proto.sync_pb.UserEventSpecifics.Translation;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.Translation.deserializeBinaryFromReader);
      msg.setTranslationEvent(value);
      break;
    case 12:
      var value = new proto.sync_pb.UserEventSpecifics.UserConsent;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.UserConsent.deserializeBinaryFromReader);
      msg.setUserConsent(value);
      break;
    case 104:
      var value = new proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.deserializeBinaryFromReader);
      msg.setGaiaPasswordReuseEvent(value);
      break;
    case 15:
      var value = new proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.deserializeBinaryFromReader);
      msg.setGaiaPasswordCapturedEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFixed64(
      3,
      f
    );
  }
  f = message.getTestEvent();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.sync_pb.UserEventSpecifics.Test.serializeBinaryToWriter
    );
  }
  f = message.getFieldTrialEvent();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.sync_pb.UserEventSpecifics.FieldTrial.serializeBinaryToWriter
    );
  }
  f = message.getLanguageDetectionEvent();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.sync_pb.UserEventSpecifics.LanguageDetection.serializeBinaryToWriter
    );
  }
  f = message.getTranslationEvent();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.sync_pb.UserEventSpecifics.Translation.serializeBinaryToWriter
    );
  }
  f = message.getUserConsent();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.sync_pb.UserEventSpecifics.UserConsent.serializeBinaryToWriter
    );
  }
  f = message.getGaiaPasswordReuseEvent();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.serializeBinaryToWriter
    );
  }
  f = message.getGaiaPasswordCapturedEvent();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.Test.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.Test.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.Test} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.Test.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.Test}
 */
proto.sync_pb.UserEventSpecifics.Test.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.Test;
  return proto.sync_pb.UserEventSpecifics.Test.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.Test} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.Test}
 */
proto.sync_pb.UserEventSpecifics.Test.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.Test.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.Test.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.Test} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.Test.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sync_pb.UserEventSpecifics.FieldTrial.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.FieldTrial.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.FieldTrial.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.FieldTrial} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.FieldTrial.toObject = function(includeInstance, msg) {
  var obj = {
    variationIdsList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.FieldTrial}
 */
proto.sync_pb.UserEventSpecifics.FieldTrial.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.FieldTrial;
  return proto.sync_pb.UserEventSpecifics.FieldTrial.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.FieldTrial} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.FieldTrial}
 */
proto.sync_pb.UserEventSpecifics.FieldTrial.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.addVariationIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.FieldTrial.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.FieldTrial.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.FieldTrial} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.FieldTrial.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVariationIdsList();
  if (f.length > 0) {
    writer.writeRepeatedFixed32(
      1,
      f
    );
  }
};


/**
 * repeated fixed32 variation_ids = 1;
 * @return {!Array<number>}
 */
proto.sync_pb.UserEventSpecifics.FieldTrial.prototype.getVariationIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<number>} value */
proto.sync_pb.UserEventSpecifics.FieldTrial.prototype.setVariationIdsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.sync_pb.UserEventSpecifics.FieldTrial.prototype.addVariationIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sync_pb.UserEventSpecifics.FieldTrial.prototype.clearVariationIdsList = function() {
  this.setVariationIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.LanguageDetection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.LanguageDetection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.toObject = function(includeInstance, msg) {
  var obj = {
    detectedLanguagesList: jspb.Message.toObjectList(msg.getDetectedLanguagesList(),
    proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.toObject, includeInstance),
    adoptedLanguageCode: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.LanguageDetection}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.LanguageDetection;
  return proto.sync_pb.UserEventSpecifics.LanguageDetection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.LanguageDetection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.LanguageDetection}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sync_pb.UserEventSpecifics.LanguageDetection.Language;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.deserializeBinaryFromReader);
      msg.addDetectedLanguages(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdoptedLanguageCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.LanguageDetection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.LanguageDetection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetectedLanguagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.LanguageDetection.Language} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.toObject = function(includeInstance, msg) {
  var obj = {
    languageCode: jspb.Message.getField(msg, 1),
    isReliable: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.LanguageDetection.Language}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.LanguageDetection.Language;
  return proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.LanguageDetection.Language} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.LanguageDetection.Language}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageCode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReliable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.LanguageDetection.Language} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string language_code = 1;
 * @return {string}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.prototype.getLanguageCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.prototype.setLanguageCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.prototype.clearLanguageCode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.prototype.hasLanguageCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool is_reliable = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.prototype.getIsReliable = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.prototype.setIsReliable = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.prototype.clearIsReliable = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.Language.prototype.hasIsReliable = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Language detected_languages = 1;
 * @return {!Array<!proto.sync_pb.UserEventSpecifics.LanguageDetection.Language>}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.prototype.getDetectedLanguagesList = function() {
  return /** @type{!Array<!proto.sync_pb.UserEventSpecifics.LanguageDetection.Language>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sync_pb.UserEventSpecifics.LanguageDetection.Language, 1));
};


/** @param {!Array<!proto.sync_pb.UserEventSpecifics.LanguageDetection.Language>} value */
proto.sync_pb.UserEventSpecifics.LanguageDetection.prototype.setDetectedLanguagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sync_pb.UserEventSpecifics.LanguageDetection.Language=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sync_pb.UserEventSpecifics.LanguageDetection.Language}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.prototype.addDetectedLanguages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sync_pb.UserEventSpecifics.LanguageDetection.Language, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.prototype.clearDetectedLanguagesList = function() {
  this.setDetectedLanguagesList([]);
};


/**
 * optional string adopted_language_code = 2;
 * @return {string}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.prototype.getAdoptedLanguageCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sync_pb.UserEventSpecifics.LanguageDetection.prototype.setAdoptedLanguageCode = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.prototype.clearAdoptedLanguageCode = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.LanguageDetection.prototype.hasAdoptedLanguageCode = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.Translation.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.Translation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.Translation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.Translation.toObject = function(includeInstance, msg) {
  var obj = {
    fromLanguageCode: jspb.Message.getField(msg, 1),
    toLanguageCode: jspb.Message.getField(msg, 2),
    interaction: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.Translation}
 */
proto.sync_pb.UserEventSpecifics.Translation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.Translation;
  return proto.sync_pb.UserEventSpecifics.Translation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.Translation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.Translation}
 */
proto.sync_pb.UserEventSpecifics.Translation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromLanguageCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToLanguageCode(value);
      break;
    case 3:
      var value = /** @type {!proto.sync_pb.UserEventSpecifics.Translation.Interaction} */ (reader.readEnum());
      msg.setInteraction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.Translation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.Translation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.Translation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.Translation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!proto.sync_pb.UserEventSpecifics.Translation.Interaction} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.sync_pb.UserEventSpecifics.Translation.Interaction = {
  UNKNOWN: 0,
  ACCEPT: 1,
  DECLINE: 2,
  IGNORED: 3,
  DISMISSED: 4,
  MANUAL: 5,
  TRANSLATION_REVERTED: 6,
  AUTO_TRANSLATION_BY_PREF: 7,
  AUTO_TRANSLATION_BY_LINK: 8,
  INITIALIZATION_ERROR: 9
};

/**
 * optional string from_language_code = 1;
 * @return {string}
 */
proto.sync_pb.UserEventSpecifics.Translation.prototype.getFromLanguageCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sync_pb.UserEventSpecifics.Translation.prototype.setFromLanguageCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.Translation.prototype.clearFromLanguageCode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.Translation.prototype.hasFromLanguageCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string to_language_code = 2;
 * @return {string}
 */
proto.sync_pb.UserEventSpecifics.Translation.prototype.getToLanguageCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sync_pb.UserEventSpecifics.Translation.prototype.setToLanguageCode = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.Translation.prototype.clearToLanguageCode = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.Translation.prototype.hasToLanguageCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Interaction interaction = 3;
 * @return {!proto.sync_pb.UserEventSpecifics.Translation.Interaction}
 */
proto.sync_pb.UserEventSpecifics.Translation.prototype.getInteraction = function() {
  return /** @type {!proto.sync_pb.UserEventSpecifics.Translation.Interaction} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.sync_pb.UserEventSpecifics.Translation.Interaction} value */
proto.sync_pb.UserEventSpecifics.Translation.prototype.setInteraction = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.Translation.prototype.clearInteraction = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.Translation.prototype.hasInteraction = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sync_pb.UserEventSpecifics.UserConsent.repeatedFields_ = [2];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sync_pb.UserEventSpecifics.UserConsent.oneofGroups_ = [[7,8,9,10,11,13]];

/**
 * @enum {number}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.ConsentCase = {
  CONSENT_NOT_SET: 0,
  SYNC_CONSENT: 7,
  ARC_BACKUP_AND_RESTORE_CONSENT: 8,
  ARC_LOCATION_SERVICE_CONSENT: 9,
  ARC_PLAY_TERMS_OF_SERVICE_CONSENT: 10,
  ARC_METRICS_AND_USAGE_CONSENT: 11,
  UNIFIED_CONSENT: 13
};

/**
 * @return {proto.sync_pb.UserEventSpecifics.UserConsent.ConsentCase}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getConsentCase = function() {
  return /** @type {proto.sync_pb.UserEventSpecifics.UserConsent.ConsentCase} */(jspb.Message.computeOneofCase(this, proto.sync_pb.UserEventSpecifics.UserConsent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.UserConsent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.UserConsent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.UserConsent.toObject = function(includeInstance, msg) {
  var obj = {
    locale: jspb.Message.getField(msg, 4),
    clientConsentTimeUsec: jspb.Message.getField(msg, 12),
    syncConsent: (f = msg.getSyncConsent()) && user_consent_types_pb.UserConsentTypes.SyncConsent.toObject(includeInstance, f),
    arcBackupAndRestoreConsent: (f = msg.getArcBackupAndRestoreConsent()) && user_consent_types_pb.UserConsentTypes.ArcBackupAndRestoreConsent.toObject(includeInstance, f),
    arcLocationServiceConsent: (f = msg.getArcLocationServiceConsent()) && user_consent_types_pb.UserConsentTypes.ArcGoogleLocationServiceConsent.toObject(includeInstance, f),
    arcPlayTermsOfServiceConsent: (f = msg.getArcPlayTermsOfServiceConsent()) && user_consent_types_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.toObject(includeInstance, f),
    arcMetricsAndUsageConsent: (f = msg.getArcMetricsAndUsageConsent()) && user_consent_types_pb.UserConsentTypes.ArcMetricsAndUsageConsent.toObject(includeInstance, f),
    unifiedConsent: (f = msg.getUnifiedConsent()) && user_consent_types_pb.UserConsentTypes.UnifiedConsent.toObject(includeInstance, f),
    accountId: jspb.Message.getField(msg, 6),
    feature: jspb.Message.getField(msg, 1),
    descriptionGrdIdsList: jspb.Message.getRepeatedField(msg, 2),
    confirmationGrdId: jspb.Message.getField(msg, 3),
    status: jspb.Message.getField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.UserConsent}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.UserConsent;
  return proto.sync_pb.UserEventSpecifics.UserConsent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.UserConsent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.UserConsent}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocale(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClientConsentTimeUsec(value);
      break;
    case 7:
      var value = new user_consent_types_pb.UserConsentTypes.SyncConsent;
      reader.readMessage(value,user_consent_types_pb.UserConsentTypes.SyncConsent.deserializeBinaryFromReader);
      msg.setSyncConsent(value);
      break;
    case 8:
      var value = new user_consent_types_pb.UserConsentTypes.ArcBackupAndRestoreConsent;
      reader.readMessage(value,user_consent_types_pb.UserConsentTypes.ArcBackupAndRestoreConsent.deserializeBinaryFromReader);
      msg.setArcBackupAndRestoreConsent(value);
      break;
    case 9:
      var value = new user_consent_types_pb.UserConsentTypes.ArcGoogleLocationServiceConsent;
      reader.readMessage(value,user_consent_types_pb.UserConsentTypes.ArcGoogleLocationServiceConsent.deserializeBinaryFromReader);
      msg.setArcLocationServiceConsent(value);
      break;
    case 10:
      var value = new user_consent_types_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent;
      reader.readMessage(value,user_consent_types_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.deserializeBinaryFromReader);
      msg.setArcPlayTermsOfServiceConsent(value);
      break;
    case 11:
      var value = new user_consent_types_pb.UserConsentTypes.ArcMetricsAndUsageConsent;
      reader.readMessage(value,user_consent_types_pb.UserConsentTypes.ArcMetricsAndUsageConsent.deserializeBinaryFromReader);
      msg.setArcMetricsAndUsageConsent(value);
      break;
    case 13:
      var value = new user_consent_types_pb.UserConsentTypes.UnifiedConsent;
      reader.readMessage(value,user_consent_types_pb.UserConsentTypes.UnifiedConsent.deserializeBinaryFromReader);
      msg.setUnifiedConsent(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 1:
      var value = /** @type {!proto.sync_pb.UserEventSpecifics.UserConsent.Feature} */ (reader.readEnum());
      msg.setFeature(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addDescriptionGrdIds(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConfirmationGrdId(value);
      break;
    case 5:
      var value = /** @type {!proto.sync_pb.UserConsentTypes.ConsentStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.UserConsent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.UserConsent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.UserConsent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getSyncConsent();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      user_consent_types_pb.UserConsentTypes.SyncConsent.serializeBinaryToWriter
    );
  }
  f = message.getArcBackupAndRestoreConsent();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      user_consent_types_pb.UserConsentTypes.ArcBackupAndRestoreConsent.serializeBinaryToWriter
    );
  }
  f = message.getArcLocationServiceConsent();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      user_consent_types_pb.UserConsentTypes.ArcGoogleLocationServiceConsent.serializeBinaryToWriter
    );
  }
  f = message.getArcPlayTermsOfServiceConsent();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      user_consent_types_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent.serializeBinaryToWriter
    );
  }
  f = message.getArcMetricsAndUsageConsent();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      user_consent_types_pb.UserConsentTypes.ArcMetricsAndUsageConsent.serializeBinaryToWriter
    );
  }
  f = message.getUnifiedConsent();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      user_consent_types_pb.UserConsentTypes.UnifiedConsent.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {!proto.sync_pb.UserEventSpecifics.UserConsent.Feature} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDescriptionGrdIdsList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {!proto.sync_pb.UserConsentTypes.ConsentStatus} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.Feature = {
  FEATURE_UNSPECIFIED: 0,
  CHROME_SYNC: 1,
  PLAY_STORE: 2,
  BACKUP_AND_RESTORE: 3,
  GOOGLE_LOCATION_SERVICE: 4,
  CHROME_UNIFIED_CONSENT: 5,
  ASSISTANT_ACTIVITY_CONTROL: 6
};

/**
 * optional string locale = 4;
 * @return {string}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getLocale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setLocale = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearLocale = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.hasLocale = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 client_consent_time_usec = 12;
 * @return {number}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getClientConsentTimeUsec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setClientConsentTimeUsec = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearClientConsentTimeUsec = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.hasClientConsentTimeUsec = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional UserConsentTypes.SyncConsent sync_consent = 7;
 * @return {?proto.sync_pb.UserConsentTypes.SyncConsent}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getSyncConsent = function() {
  return /** @type{?proto.sync_pb.UserConsentTypes.SyncConsent} */ (
    jspb.Message.getWrapperField(this, user_consent_types_pb.UserConsentTypes.SyncConsent, 7));
};


/** @param {?proto.sync_pb.UserConsentTypes.SyncConsent|undefined} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setSyncConsent = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.sync_pb.UserEventSpecifics.UserConsent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearSyncConsent = function() {
  this.setSyncConsent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.hasSyncConsent = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional UserConsentTypes.ArcBackupAndRestoreConsent arc_backup_and_restore_consent = 8;
 * @return {?proto.sync_pb.UserConsentTypes.ArcBackupAndRestoreConsent}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getArcBackupAndRestoreConsent = function() {
  return /** @type{?proto.sync_pb.UserConsentTypes.ArcBackupAndRestoreConsent} */ (
    jspb.Message.getWrapperField(this, user_consent_types_pb.UserConsentTypes.ArcBackupAndRestoreConsent, 8));
};


/** @param {?proto.sync_pb.UserConsentTypes.ArcBackupAndRestoreConsent|undefined} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setArcBackupAndRestoreConsent = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.sync_pb.UserEventSpecifics.UserConsent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearArcBackupAndRestoreConsent = function() {
  this.setArcBackupAndRestoreConsent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.hasArcBackupAndRestoreConsent = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional UserConsentTypes.ArcGoogleLocationServiceConsent arc_location_service_consent = 9;
 * @return {?proto.sync_pb.UserConsentTypes.ArcGoogleLocationServiceConsent}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getArcLocationServiceConsent = function() {
  return /** @type{?proto.sync_pb.UserConsentTypes.ArcGoogleLocationServiceConsent} */ (
    jspb.Message.getWrapperField(this, user_consent_types_pb.UserConsentTypes.ArcGoogleLocationServiceConsent, 9));
};


/** @param {?proto.sync_pb.UserConsentTypes.ArcGoogleLocationServiceConsent|undefined} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setArcLocationServiceConsent = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.sync_pb.UserEventSpecifics.UserConsent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearArcLocationServiceConsent = function() {
  this.setArcLocationServiceConsent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.hasArcLocationServiceConsent = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional UserConsentTypes.ArcPlayTermsOfServiceConsent arc_play_terms_of_service_consent = 10;
 * @return {?proto.sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getArcPlayTermsOfServiceConsent = function() {
  return /** @type{?proto.sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent} */ (
    jspb.Message.getWrapperField(this, user_consent_types_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent, 10));
};


/** @param {?proto.sync_pb.UserConsentTypes.ArcPlayTermsOfServiceConsent|undefined} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setArcPlayTermsOfServiceConsent = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.sync_pb.UserEventSpecifics.UserConsent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearArcPlayTermsOfServiceConsent = function() {
  this.setArcPlayTermsOfServiceConsent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.hasArcPlayTermsOfServiceConsent = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional UserConsentTypes.ArcMetricsAndUsageConsent arc_metrics_and_usage_consent = 11;
 * @return {?proto.sync_pb.UserConsentTypes.ArcMetricsAndUsageConsent}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getArcMetricsAndUsageConsent = function() {
  return /** @type{?proto.sync_pb.UserConsentTypes.ArcMetricsAndUsageConsent} */ (
    jspb.Message.getWrapperField(this, user_consent_types_pb.UserConsentTypes.ArcMetricsAndUsageConsent, 11));
};


/** @param {?proto.sync_pb.UserConsentTypes.ArcMetricsAndUsageConsent|undefined} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setArcMetricsAndUsageConsent = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.sync_pb.UserEventSpecifics.UserConsent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearArcMetricsAndUsageConsent = function() {
  this.setArcMetricsAndUsageConsent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.hasArcMetricsAndUsageConsent = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional UserConsentTypes.UnifiedConsent unified_consent = 13;
 * @return {?proto.sync_pb.UserConsentTypes.UnifiedConsent}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getUnifiedConsent = function() {
  return /** @type{?proto.sync_pb.UserConsentTypes.UnifiedConsent} */ (
    jspb.Message.getWrapperField(this, user_consent_types_pb.UserConsentTypes.UnifiedConsent, 13));
};


/** @param {?proto.sync_pb.UserConsentTypes.UnifiedConsent|undefined} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setUnifiedConsent = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.sync_pb.UserEventSpecifics.UserConsent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearUnifiedConsent = function() {
  this.setUnifiedConsent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.hasUnifiedConsent = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string account_id = 6;
 * @return {string}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setAccountId = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearAccountId = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.hasAccountId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Feature feature = 1;
 * @return {!proto.sync_pb.UserEventSpecifics.UserConsent.Feature}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getFeature = function() {
  return /** @type {!proto.sync_pb.UserEventSpecifics.UserConsent.Feature} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.sync_pb.UserEventSpecifics.UserConsent.Feature} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setFeature = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearFeature = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.hasFeature = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated int32 description_grd_ids = 2;
 * @return {!Array<number>}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getDescriptionGrdIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<number>} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setDescriptionGrdIdsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.addDescriptionGrdIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearDescriptionGrdIdsList = function() {
  this.setDescriptionGrdIdsList([]);
};


/**
 * optional int32 confirmation_grd_id = 3;
 * @return {number}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getConfirmationGrdId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setConfirmationGrdId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearConfirmationGrdId = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.hasConfirmationGrdId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UserConsentTypes.ConsentStatus status = 5;
 * @return {!proto.sync_pb.UserConsentTypes.ConsentStatus}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.getStatus = function() {
  return /** @type {!proto.sync_pb.UserConsentTypes.ConsentStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.sync_pb.UserConsentTypes.ConsentStatus} value */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.clearStatus = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.UserConsent.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.toObject = function(includeInstance, msg) {
  var obj = {
    reuseDetected: (f = msg.getReuseDetected()) && proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.toObject(includeInstance, f),
    reuseLookup: (f = msg.getReuseLookup()) && proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.toObject(includeInstance, f),
    dialogInteraction: (f = msg.getDialogInteraction()) && proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.toObject(includeInstance, f),
    passwordCaptured: (f = msg.getPasswordCaptured()) && proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse;
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.deserializeBinaryFromReader);
      msg.setReuseDetected(value);
      break;
    case 2:
      var value = new proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.deserializeBinaryFromReader);
      msg.setReuseLookup(value);
      break;
    case 3:
      var value = new proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.deserializeBinaryFromReader);
      msg.setDialogInteraction(value);
      break;
    case 4:
      var value = new proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.deserializeBinaryFromReader);
      msg.setPasswordCaptured(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReuseDetected();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.serializeBinaryToWriter
    );
  }
  f = message.getReuseLookup();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.serializeBinaryToWriter
    );
  }
  f = message.getDialogInteraction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.serializeBinaryToWriter
    );
  }
  f = message.getPasswordCaptured();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.toObject = function(includeInstance, msg) {
  var obj = {
    status: (f = msg.getStatus()) && proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected;
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus;
      reader.readMessage(value,proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.toObject = function(includeInstance, msg) {
  var obj = {
    enabled: jspb.Message.getField(msg, 1),
    safeBrowsingReportingPopulation: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus;
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.ReportingPopulation} */ (reader.readEnum());
      msg.setSafeBrowsingReportingPopulation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.ReportingPopulation} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.ReportingPopulation = {
  REPORTING_POPULATION_UNSPECIFIED: 0,
  NONE: 1,
  EXTENDED_REPORTING: 2,
  SCOUT: 3
};

/**
 * optional bool enabled = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.prototype.setEnabled = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.prototype.clearEnabled = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.prototype.hasEnabled = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ReportingPopulation safe_browsing_reporting_population = 2;
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.ReportingPopulation}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.prototype.getSafeBrowsingReportingPopulation = function() {
  return /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.ReportingPopulation} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.ReportingPopulation} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.prototype.setSafeBrowsingReportingPopulation = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.prototype.clearSafeBrowsingReportingPopulation = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus.prototype.hasSafeBrowsingReportingPopulation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SafeBrowsingStatus status = 1;
 * @return {?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.prototype.getStatus = function() {
  return /** @type{?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus, 1));
};


/** @param {?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.SafeBrowsingStatus|undefined} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.toObject = function(includeInstance, msg) {
  var obj = {
    lookupResult: jspb.Message.getField(msg, 1),
    verdict: jspb.Message.getField(msg, 2),
    verdictToken: msg.getVerdictToken_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup;
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.LookupResult} */ (reader.readEnum());
      msg.setLookupResult(value);
      break;
    case 2:
      var value = /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.ReputationVerdict} */ (reader.readEnum());
      msg.setVerdict(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setVerdictToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.LookupResult} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.ReputationVerdict} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.LookupResult = {
  UNSPECIFIED: 0,
  WHITELIST_HIT: 1,
  CACHE_HIT: 2,
  REQUEST_SUCCESS: 3,
  REQUEST_FAILURE: 4,
  URL_UNSUPPORTED: 5,
  ENTERPRISE_WHITELIST_HIT: 6,
  TURNED_OFF_BY_POLICY: 7
};

/**
 * @enum {number}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.ReputationVerdict = {
  VERDICT_UNSPECIFIED: 0,
  SAFE: 1,
  LOW_REPUTATION: 2,
  PHISHING: 3
};

/**
 * optional LookupResult lookup_result = 1;
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.LookupResult}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.getLookupResult = function() {
  return /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.LookupResult} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.LookupResult} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.setLookupResult = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.clearLookupResult = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.hasLookupResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ReputationVerdict verdict = 2;
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.ReputationVerdict}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.getVerdict = function() {
  return /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.ReputationVerdict} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.ReputationVerdict} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.setVerdict = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.clearVerdict = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.hasVerdict = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes verdict_token = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.getVerdictToken = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes verdict_token = 3;
 * This is a type-conversion wrapper around `getVerdictToken()`
 * @return {string}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.getVerdictToken_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getVerdictToken()));
};


/**
 * optional bytes verdict_token = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getVerdictToken()`
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.getVerdictToken_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getVerdictToken()));
};


/** @param {!(string|Uint8Array)} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.setVerdictToken = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.clearVerdictToken = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup.prototype.hasVerdictToken = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.toObject = function(includeInstance, msg) {
  var obj = {
    interactionResult: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction;
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.InteractionResult} */ (reader.readEnum());
      msg.setInteractionResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.InteractionResult} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.InteractionResult = {
  UNSPECIFIED: 0,
  WARNING_ACTION_TAKEN: 1,
  WARNING_ACTION_IGNORED: 2,
  WARNING_UI_IGNORED: 3,
  WARNING_ACTION_TAKEN_ON_SETTINGS: 4
};

/**
 * optional InteractionResult interaction_result = 1;
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.InteractionResult}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.prototype.getInteractionResult = function() {
  return /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.InteractionResult} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.InteractionResult} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.prototype.setInteractionResult = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.prototype.clearInteractionResult = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction.prototype.hasInteractionResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.toObject = function(includeInstance, msg) {
  var obj = {
    eventTrigger: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured;
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.EventTrigger} */ (reader.readEnum());
      msg.setEventTrigger(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.EventTrigger} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.EventTrigger = {
  UNSPECIFIED: 0,
  USER_LOGGED_IN: 1,
  EXPIRED_28D_TIMER: 2
};

/**
 * optional EventTrigger event_trigger = 1;
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.EventTrigger}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.prototype.getEventTrigger = function() {
  return /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.EventTrigger} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.EventTrigger} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.prototype.setEventTrigger = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.prototype.clearEventTrigger = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured.prototype.hasEventTrigger = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PasswordReuseDetected reuse_detected = 1;
 * @return {?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.getReuseDetected = function() {
  return /** @type{?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected, 1));
};


/** @param {?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDetected|undefined} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.setReuseDetected = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.clearReuseDetected = function() {
  this.setReuseDetected(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.hasReuseDetected = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PasswordReuseLookup reuse_lookup = 2;
 * @return {?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.getReuseLookup = function() {
  return /** @type{?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup, 2));
};


/** @param {?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseLookup|undefined} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.setReuseLookup = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.clearReuseLookup = function() {
  this.setReuseLookup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.hasReuseLookup = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PasswordReuseDialogInteraction dialog_interaction = 3;
 * @return {?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.getDialogInteraction = function() {
  return /** @type{?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction, 3));
};


/** @param {?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordReuseDialogInteraction|undefined} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.setDialogInteraction = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.clearDialogInteraction = function() {
  this.setDialogInteraction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.hasDialogInteraction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PasswordCaptured password_captured = 4;
 * @return {?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.getPasswordCaptured = function() {
  return /** @type{?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured, 4));
};


/** @param {?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.PasswordCaptured|undefined} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.setPasswordCaptured = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.clearPasswordCaptured = function() {
  this.setPasswordCaptured(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse.prototype.hasPasswordCaptured = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.toObject = function(includeInstance, msg) {
  var obj = {
    eventTrigger: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured;
  return proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.EventTrigger} */ (reader.readEnum());
      msg.setEventTrigger(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.EventTrigger} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.EventTrigger = {
  UNSPECIFIED: 0,
  USER_LOGGED_IN: 1,
  EXPIRED_28D_TIMER: 2
};

/**
 * optional EventTrigger event_trigger = 1;
 * @return {!proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.EventTrigger}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.prototype.getEventTrigger = function() {
  return /** @type {!proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.EventTrigger} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.EventTrigger} value */
proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.prototype.setEventTrigger = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.prototype.clearEventTrigger = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured.prototype.hasEventTrigger = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 event_time_usec = 1;
 * @return {number}
 */
proto.sync_pb.UserEventSpecifics.prototype.getEventTimeUsec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.sync_pb.UserEventSpecifics.prototype.setEventTimeUsec = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.prototype.clearEventTimeUsec = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.prototype.hasEventTimeUsec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 navigation_id = 2;
 * @return {number}
 */
proto.sync_pb.UserEventSpecifics.prototype.getNavigationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.sync_pb.UserEventSpecifics.prototype.setNavigationId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.prototype.clearNavigationId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.prototype.hasNavigationId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional fixed64 session_id = 3;
 * @return {number}
 */
proto.sync_pb.UserEventSpecifics.prototype.getSessionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.sync_pb.UserEventSpecifics.prototype.setSessionId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.prototype.clearSessionId = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.prototype.hasSessionId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Test test_event = 8;
 * @return {?proto.sync_pb.UserEventSpecifics.Test}
 */
proto.sync_pb.UserEventSpecifics.prototype.getTestEvent = function() {
  return /** @type{?proto.sync_pb.UserEventSpecifics.Test} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.UserEventSpecifics.Test, 8));
};


/** @param {?proto.sync_pb.UserEventSpecifics.Test|undefined} value */
proto.sync_pb.UserEventSpecifics.prototype.setTestEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.sync_pb.UserEventSpecifics.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.prototype.clearTestEvent = function() {
  this.setTestEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.prototype.hasTestEvent = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional FieldTrial field_trial_event = 9;
 * @return {?proto.sync_pb.UserEventSpecifics.FieldTrial}
 */
proto.sync_pb.UserEventSpecifics.prototype.getFieldTrialEvent = function() {
  return /** @type{?proto.sync_pb.UserEventSpecifics.FieldTrial} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.UserEventSpecifics.FieldTrial, 9));
};


/** @param {?proto.sync_pb.UserEventSpecifics.FieldTrial|undefined} value */
proto.sync_pb.UserEventSpecifics.prototype.setFieldTrialEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.sync_pb.UserEventSpecifics.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.prototype.clearFieldTrialEvent = function() {
  this.setFieldTrialEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.prototype.hasFieldTrialEvent = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional LanguageDetection language_detection_event = 10;
 * @return {?proto.sync_pb.UserEventSpecifics.LanguageDetection}
 */
proto.sync_pb.UserEventSpecifics.prototype.getLanguageDetectionEvent = function() {
  return /** @type{?proto.sync_pb.UserEventSpecifics.LanguageDetection} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.UserEventSpecifics.LanguageDetection, 10));
};


/** @param {?proto.sync_pb.UserEventSpecifics.LanguageDetection|undefined} value */
proto.sync_pb.UserEventSpecifics.prototype.setLanguageDetectionEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.sync_pb.UserEventSpecifics.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.prototype.clearLanguageDetectionEvent = function() {
  this.setLanguageDetectionEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.prototype.hasLanguageDetectionEvent = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Translation translation_event = 11;
 * @return {?proto.sync_pb.UserEventSpecifics.Translation}
 */
proto.sync_pb.UserEventSpecifics.prototype.getTranslationEvent = function() {
  return /** @type{?proto.sync_pb.UserEventSpecifics.Translation} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.UserEventSpecifics.Translation, 11));
};


/** @param {?proto.sync_pb.UserEventSpecifics.Translation|undefined} value */
proto.sync_pb.UserEventSpecifics.prototype.setTranslationEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.sync_pb.UserEventSpecifics.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.prototype.clearTranslationEvent = function() {
  this.setTranslationEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.prototype.hasTranslationEvent = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional UserConsent user_consent = 12;
 * @return {?proto.sync_pb.UserEventSpecifics.UserConsent}
 */
proto.sync_pb.UserEventSpecifics.prototype.getUserConsent = function() {
  return /** @type{?proto.sync_pb.UserEventSpecifics.UserConsent} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.UserEventSpecifics.UserConsent, 12));
};


/** @param {?proto.sync_pb.UserEventSpecifics.UserConsent|undefined} value */
proto.sync_pb.UserEventSpecifics.prototype.setUserConsent = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.sync_pb.UserEventSpecifics.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.prototype.clearUserConsent = function() {
  this.setUserConsent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.prototype.hasUserConsent = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional GaiaPasswordReuse gaia_password_reuse_event = 104;
 * @return {?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse}
 */
proto.sync_pb.UserEventSpecifics.prototype.getGaiaPasswordReuseEvent = function() {
  return /** @type{?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse, 104));
};


/** @param {?proto.sync_pb.UserEventSpecifics.GaiaPasswordReuse|undefined} value */
proto.sync_pb.UserEventSpecifics.prototype.setGaiaPasswordReuseEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 104, proto.sync_pb.UserEventSpecifics.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.prototype.clearGaiaPasswordReuseEvent = function() {
  this.setGaiaPasswordReuseEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.prototype.hasGaiaPasswordReuseEvent = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional GaiaPasswordCaptured gaia_password_captured_event = 15;
 * @return {?proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured}
 */
proto.sync_pb.UserEventSpecifics.prototype.getGaiaPasswordCapturedEvent = function() {
  return /** @type{?proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured, 15));
};


/** @param {?proto.sync_pb.UserEventSpecifics.GaiaPasswordCaptured|undefined} value */
proto.sync_pb.UserEventSpecifics.prototype.setGaiaPasswordCapturedEvent = function(value) {
  jspb.Message.setOneofWrapperField(this, 15, proto.sync_pb.UserEventSpecifics.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.UserEventSpecifics.prototype.clearGaiaPasswordCapturedEvent = function() {
  this.setGaiaPasswordCapturedEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.UserEventSpecifics.prototype.hasGaiaPasswordCapturedEvent = function() {
  return jspb.Message.getField(this, 15) != null;
};


goog.object.extend(exports, proto.sync_pb);
