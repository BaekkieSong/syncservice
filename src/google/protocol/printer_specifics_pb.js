/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.sync_pb.PrinterPPDReference', null, global);
goog.exportSymbol('proto.sync_pb.PrinterSpecifics', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.PrinterPPDReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.PrinterPPDReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.PrinterPPDReference.displayName = 'proto.sync_pb.PrinterPPDReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.PrinterSpecifics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.PrinterSpecifics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.PrinterSpecifics.displayName = 'proto.sync_pb.PrinterSpecifics';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.PrinterPPDReference.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.PrinterPPDReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.PrinterPPDReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.PrinterPPDReference.toObject = function(includeInstance, msg) {
  var obj = {
    userSuppliedPpdUrl: jspb.Message.getField(msg, 1),
    effectiveManufacturer: jspb.Message.getField(msg, 2),
    effectiveModel: jspb.Message.getField(msg, 3),
    effectiveMakeAndModel: jspb.Message.getField(msg, 4),
    autoconf: jspb.Message.getFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.PrinterPPDReference}
 */
proto.sync_pb.PrinterPPDReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.PrinterPPDReference;
  return proto.sync_pb.PrinterPPDReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.PrinterPPDReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.PrinterPPDReference}
 */
proto.sync_pb.PrinterPPDReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserSuppliedPpdUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEffectiveManufacturer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEffectiveModel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEffectiveMakeAndModel(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoconf(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.PrinterPPDReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.PrinterPPDReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.PrinterPPDReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.PrinterPPDReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string user_supplied_ppd_url = 1;
 * @return {string}
 */
proto.sync_pb.PrinterPPDReference.prototype.getUserSuppliedPpdUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sync_pb.PrinterPPDReference.prototype.setUserSuppliedPpdUrl = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterPPDReference.prototype.clearUserSuppliedPpdUrl = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterPPDReference.prototype.hasUserSuppliedPpdUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string effective_manufacturer = 2;
 * @return {string}
 */
proto.sync_pb.PrinterPPDReference.prototype.getEffectiveManufacturer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sync_pb.PrinterPPDReference.prototype.setEffectiveManufacturer = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterPPDReference.prototype.clearEffectiveManufacturer = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterPPDReference.prototype.hasEffectiveManufacturer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string effective_model = 3;
 * @return {string}
 */
proto.sync_pb.PrinterPPDReference.prototype.getEffectiveModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.sync_pb.PrinterPPDReference.prototype.setEffectiveModel = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterPPDReference.prototype.clearEffectiveModel = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterPPDReference.prototype.hasEffectiveModel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string effective_make_and_model = 4;
 * @return {string}
 */
proto.sync_pb.PrinterPPDReference.prototype.getEffectiveMakeAndModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.sync_pb.PrinterPPDReference.prototype.setEffectiveMakeAndModel = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterPPDReference.prototype.clearEffectiveMakeAndModel = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterPPDReference.prototype.hasEffectiveMakeAndModel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool autoconf = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.PrinterPPDReference.prototype.getAutoconf = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.sync_pb.PrinterPPDReference.prototype.setAutoconf = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterPPDReference.prototype.clearAutoconf = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterPPDReference.prototype.hasAutoconf = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.PrinterSpecifics.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.PrinterSpecifics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.PrinterSpecifics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.PrinterSpecifics.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getField(msg, 1),
    displayName: jspb.Message.getField(msg, 2),
    description: jspb.Message.getField(msg, 3),
    manufacturer: jspb.Message.getField(msg, 4),
    model: jspb.Message.getField(msg, 5),
    uri: jspb.Message.getField(msg, 6),
    uuid: jspb.Message.getField(msg, 7),
    ppd: msg.getPpd_asB64(),
    ppdReference: (f = msg.getPpdReference()) && proto.sync_pb.PrinterPPDReference.toObject(includeInstance, f),
    updatedTimestamp: jspb.Message.getField(msg, 10),
    makeAndModel: jspb.Message.getField(msg, 11)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.PrinterSpecifics}
 */
proto.sync_pb.PrinterSpecifics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.PrinterSpecifics;
  return proto.sync_pb.PrinterSpecifics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.PrinterSpecifics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.PrinterSpecifics}
 */
proto.sync_pb.PrinterSpecifics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setManufacturer(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPpd(value);
      break;
    case 9:
      var value = new proto.sync_pb.PrinterPPDReference;
      reader.readMessage(value,proto.sync_pb.PrinterPPDReference.deserializeBinaryFromReader);
      msg.setPpdReference(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedTimestamp(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakeAndModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.PrinterSpecifics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.PrinterSpecifics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.PrinterSpecifics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.PrinterSpecifics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getPpdReference();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.sync_pb.PrinterPPDReference.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.sync_pb.PrinterSpecifics.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sync_pb.PrinterSpecifics.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterSpecifics.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterSpecifics.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.sync_pb.PrinterSpecifics.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.sync_pb.PrinterSpecifics.prototype.setDisplayName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterSpecifics.prototype.clearDisplayName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterSpecifics.prototype.hasDisplayName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.sync_pb.PrinterSpecifics.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.sync_pb.PrinterSpecifics.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterSpecifics.prototype.clearDescription = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterSpecifics.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string manufacturer = 4;
 * @return {string}
 */
proto.sync_pb.PrinterSpecifics.prototype.getManufacturer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.sync_pb.PrinterSpecifics.prototype.setManufacturer = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterSpecifics.prototype.clearManufacturer = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterSpecifics.prototype.hasManufacturer = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string model = 5;
 * @return {string}
 */
proto.sync_pb.PrinterSpecifics.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.sync_pb.PrinterSpecifics.prototype.setModel = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterSpecifics.prototype.clearModel = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterSpecifics.prototype.hasModel = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string uri = 6;
 * @return {string}
 */
proto.sync_pb.PrinterSpecifics.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.sync_pb.PrinterSpecifics.prototype.setUri = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterSpecifics.prototype.clearUri = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterSpecifics.prototype.hasUri = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string uuid = 7;
 * @return {string}
 */
proto.sync_pb.PrinterSpecifics.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.sync_pb.PrinterSpecifics.prototype.setUuid = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterSpecifics.prototype.clearUuid = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterSpecifics.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bytes ppd = 8;
 * @return {!(string|Uint8Array)}
 */
proto.sync_pb.PrinterSpecifics.prototype.getPpd = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes ppd = 8;
 * This is a type-conversion wrapper around `getPpd()`
 * @return {string}
 */
proto.sync_pb.PrinterSpecifics.prototype.getPpd_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPpd()));
};


/**
 * optional bytes ppd = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPpd()`
 * @return {!Uint8Array}
 */
proto.sync_pb.PrinterSpecifics.prototype.getPpd_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPpd()));
};


/** @param {!(string|Uint8Array)} value */
proto.sync_pb.PrinterSpecifics.prototype.setPpd = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterSpecifics.prototype.clearPpd = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterSpecifics.prototype.hasPpd = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PrinterPPDReference ppd_reference = 9;
 * @return {?proto.sync_pb.PrinterPPDReference}
 */
proto.sync_pb.PrinterSpecifics.prototype.getPpdReference = function() {
  return /** @type{?proto.sync_pb.PrinterPPDReference} */ (
    jspb.Message.getWrapperField(this, proto.sync_pb.PrinterPPDReference, 9));
};


/** @param {?proto.sync_pb.PrinterPPDReference|undefined} value */
proto.sync_pb.PrinterSpecifics.prototype.setPpdReference = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.PrinterSpecifics.prototype.clearPpdReference = function() {
  this.setPpdReference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterSpecifics.prototype.hasPpdReference = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 updated_timestamp = 10;
 * @return {number}
 */
proto.sync_pb.PrinterSpecifics.prototype.getUpdatedTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.sync_pb.PrinterSpecifics.prototype.setUpdatedTimestamp = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterSpecifics.prototype.clearUpdatedTimestamp = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterSpecifics.prototype.hasUpdatedTimestamp = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string make_and_model = 11;
 * @return {string}
 */
proto.sync_pb.PrinterSpecifics.prototype.getMakeAndModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.sync_pb.PrinterSpecifics.prototype.setMakeAndModel = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.PrinterSpecifics.prototype.clearMakeAndModel = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.PrinterSpecifics.prototype.hasMakeAndModel = function() {
  return jspb.Message.getField(this, 11) != null;
};


goog.object.extend(exports, proto.sync_pb);
