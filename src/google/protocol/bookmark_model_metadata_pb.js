/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var model_type_state_pb = require('./model_type_state_pb.js');
goog.object.extend(proto, model_type_state_pb);
var entity_metadata_pb = require('./entity_metadata_pb.js');
goog.object.extend(proto, entity_metadata_pb);
goog.exportSymbol('proto.sync_pb.BookmarkMetadata', null, global);
goog.exportSymbol('proto.sync_pb.BookmarkModelMetadata', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.BookmarkMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.BookmarkMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.BookmarkMetadata.displayName = 'proto.sync_pb.BookmarkMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.BookmarkModelMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sync_pb.BookmarkModelMetadata.repeatedFields_, null);
};
goog.inherits(proto.sync_pb.BookmarkModelMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.BookmarkModelMetadata.displayName = 'proto.sync_pb.BookmarkModelMetadata';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.BookmarkMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.BookmarkMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.BookmarkMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.BookmarkMetadata.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getField(msg, 1),
    metadata: (f = msg.getMetadata()) && entity_metadata_pb.EntityMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.BookmarkMetadata}
 */
proto.sync_pb.BookmarkMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.BookmarkMetadata;
  return proto.sync_pb.BookmarkMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.BookmarkMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.BookmarkMetadata}
 */
proto.sync_pb.BookmarkMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = new entity_metadata_pb.EntityMetadata;
      reader.readMessage(value,entity_metadata_pb.EntityMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.BookmarkMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.BookmarkMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.BookmarkMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.BookmarkMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      entity_metadata_pb.EntityMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.sync_pb.BookmarkMetadata.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.sync_pb.BookmarkMetadata.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.BookmarkMetadata.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.BookmarkMetadata.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EntityMetadata metadata = 2;
 * @return {?proto.sync_pb.EntityMetadata}
 */
proto.sync_pb.BookmarkMetadata.prototype.getMetadata = function() {
  return /** @type{?proto.sync_pb.EntityMetadata} */ (
    jspb.Message.getWrapperField(this, entity_metadata_pb.EntityMetadata, 2));
};


/** @param {?proto.sync_pb.EntityMetadata|undefined} value */
proto.sync_pb.BookmarkMetadata.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.BookmarkMetadata.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.BookmarkMetadata.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sync_pb.BookmarkModelMetadata.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.BookmarkModelMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.BookmarkModelMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.BookmarkModelMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.BookmarkModelMetadata.toObject = function(includeInstance, msg) {
  var obj = {
    modelTypeState: (f = msg.getModelTypeState()) && model_type_state_pb.ModelTypeState.toObject(includeInstance, f),
    bookmarksMetadataList: jspb.Message.toObjectList(msg.getBookmarksMetadataList(),
    proto.sync_pb.BookmarkMetadata.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.BookmarkModelMetadata}
 */
proto.sync_pb.BookmarkModelMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.BookmarkModelMetadata;
  return proto.sync_pb.BookmarkModelMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.BookmarkModelMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.BookmarkModelMetadata}
 */
proto.sync_pb.BookmarkModelMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new model_type_state_pb.ModelTypeState;
      reader.readMessage(value,model_type_state_pb.ModelTypeState.deserializeBinaryFromReader);
      msg.setModelTypeState(value);
      break;
    case 2:
      var value = new proto.sync_pb.BookmarkMetadata;
      reader.readMessage(value,proto.sync_pb.BookmarkMetadata.deserializeBinaryFromReader);
      msg.addBookmarksMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.BookmarkModelMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.BookmarkModelMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.BookmarkModelMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.BookmarkModelMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelTypeState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      model_type_state_pb.ModelTypeState.serializeBinaryToWriter
    );
  }
  f = message.getBookmarksMetadataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sync_pb.BookmarkMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional ModelTypeState model_type_state = 1;
 * @return {?proto.sync_pb.ModelTypeState}
 */
proto.sync_pb.BookmarkModelMetadata.prototype.getModelTypeState = function() {
  return /** @type{?proto.sync_pb.ModelTypeState} */ (
    jspb.Message.getWrapperField(this, model_type_state_pb.ModelTypeState, 1));
};


/** @param {?proto.sync_pb.ModelTypeState|undefined} value */
proto.sync_pb.BookmarkModelMetadata.prototype.setModelTypeState = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.BookmarkModelMetadata.prototype.clearModelTypeState = function() {
  this.setModelTypeState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.BookmarkModelMetadata.prototype.hasModelTypeState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated BookmarkMetadata bookmarks_metadata = 2;
 * @return {!Array<!proto.sync_pb.BookmarkMetadata>}
 */
proto.sync_pb.BookmarkModelMetadata.prototype.getBookmarksMetadataList = function() {
  return /** @type{!Array<!proto.sync_pb.BookmarkMetadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sync_pb.BookmarkMetadata, 2));
};


/** @param {!Array<!proto.sync_pb.BookmarkMetadata>} value */
proto.sync_pb.BookmarkModelMetadata.prototype.setBookmarksMetadataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sync_pb.BookmarkMetadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sync_pb.BookmarkMetadata}
 */
proto.sync_pb.BookmarkModelMetadata.prototype.addBookmarksMetadata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sync_pb.BookmarkMetadata, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sync_pb.BookmarkModelMetadata.prototype.clearBookmarksMetadataList = function() {
  this.setBookmarksMetadataList([]);
};


goog.object.extend(exports, proto.sync_pb);
