/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var encryption_pb = require('./encryption_pb.js');
goog.object.extend(proto, encryption_pb);
goog.exportSymbol('proto.sync_pb.NigoriKey', null, global);
goog.exportSymbol('proto.sync_pb.NigoriKeyBag', null, global);
goog.exportSymbol('proto.sync_pb.NigoriSpecifics', null, global);
goog.exportSymbol('proto.sync_pb.NigoriSpecifics.KeyDerivationMethod', null, global);
goog.exportSymbol('proto.sync_pb.NigoriSpecifics.PassphraseType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.NigoriKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.NigoriKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.NigoriKey.displayName = 'proto.sync_pb.NigoriKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.NigoriKeyBag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sync_pb.NigoriKeyBag.repeatedFields_, null);
};
goog.inherits(proto.sync_pb.NigoriKeyBag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.NigoriKeyBag.displayName = 'proto.sync_pb.NigoriKeyBag';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sync_pb.NigoriSpecifics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sync_pb.NigoriSpecifics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sync_pb.NigoriSpecifics.displayName = 'proto.sync_pb.NigoriSpecifics';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.NigoriKey.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.NigoriKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.NigoriKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.NigoriKey.toObject = function(includeInstance, msg) {
  var obj = {
    name: jspb.Message.getField(msg, 1),
    userKey: msg.getUserKey_asB64(),
    encryptionKey: msg.getEncryptionKey_asB64(),
    macKey: msg.getMacKey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.NigoriKey}
 */
proto.sync_pb.NigoriKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.NigoriKey;
  return proto.sync_pb.NigoriKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.NigoriKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.NigoriKey}
 */
proto.sync_pb.NigoriKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUserKey(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptionKey(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMacKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.NigoriKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.NigoriKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.NigoriKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.NigoriKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.sync_pb.NigoriKey.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.sync_pb.NigoriKey.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriKey.prototype.clearName = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriKey.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes user_key = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sync_pb.NigoriKey.prototype.getUserKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes user_key = 2;
 * This is a type-conversion wrapper around `getUserKey()`
 * @return {string}
 */
proto.sync_pb.NigoriKey.prototype.getUserKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUserKey()));
};


/**
 * optional bytes user_key = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUserKey()`
 * @return {!Uint8Array}
 */
proto.sync_pb.NigoriKey.prototype.getUserKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUserKey()));
};


/** @param {!(string|Uint8Array)} value */
proto.sync_pb.NigoriKey.prototype.setUserKey = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriKey.prototype.clearUserKey = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriKey.prototype.hasUserKey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes encryption_key = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sync_pb.NigoriKey.prototype.getEncryptionKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes encryption_key = 3;
 * This is a type-conversion wrapper around `getEncryptionKey()`
 * @return {string}
 */
proto.sync_pb.NigoriKey.prototype.getEncryptionKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptionKey()));
};


/**
 * optional bytes encryption_key = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptionKey()`
 * @return {!Uint8Array}
 */
proto.sync_pb.NigoriKey.prototype.getEncryptionKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptionKey()));
};


/** @param {!(string|Uint8Array)} value */
proto.sync_pb.NigoriKey.prototype.setEncryptionKey = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriKey.prototype.clearEncryptionKey = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriKey.prototype.hasEncryptionKey = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes mac_key = 4;
 * @return {!(string|Uint8Array)}
 */
proto.sync_pb.NigoriKey.prototype.getMacKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes mac_key = 4;
 * This is a type-conversion wrapper around `getMacKey()`
 * @return {string}
 */
proto.sync_pb.NigoriKey.prototype.getMacKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMacKey()));
};


/**
 * optional bytes mac_key = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMacKey()`
 * @return {!Uint8Array}
 */
proto.sync_pb.NigoriKey.prototype.getMacKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMacKey()));
};


/** @param {!(string|Uint8Array)} value */
proto.sync_pb.NigoriKey.prototype.setMacKey = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriKey.prototype.clearMacKey = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriKey.prototype.hasMacKey = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sync_pb.NigoriKeyBag.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.NigoriKeyBag.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.NigoriKeyBag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.NigoriKeyBag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.NigoriKeyBag.toObject = function(includeInstance, msg) {
  var obj = {
    keyList: jspb.Message.toObjectList(msg.getKeyList(),
    proto.sync_pb.NigoriKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.NigoriKeyBag}
 */
proto.sync_pb.NigoriKeyBag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.NigoriKeyBag;
  return proto.sync_pb.NigoriKeyBag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.NigoriKeyBag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.NigoriKeyBag}
 */
proto.sync_pb.NigoriKeyBag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.sync_pb.NigoriKey;
      reader.readMessage(value,proto.sync_pb.NigoriKey.deserializeBinaryFromReader);
      msg.addKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.NigoriKeyBag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.NigoriKeyBag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.NigoriKeyBag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.NigoriKeyBag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sync_pb.NigoriKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NigoriKey key = 2;
 * @return {!Array<!proto.sync_pb.NigoriKey>}
 */
proto.sync_pb.NigoriKeyBag.prototype.getKeyList = function() {
  return /** @type{!Array<!proto.sync_pb.NigoriKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.sync_pb.NigoriKey, 2));
};


/** @param {!Array<!proto.sync_pb.NigoriKey>} value */
proto.sync_pb.NigoriKeyBag.prototype.setKeyList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sync_pb.NigoriKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sync_pb.NigoriKey}
 */
proto.sync_pb.NigoriKeyBag.prototype.addKey = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sync_pb.NigoriKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.sync_pb.NigoriKeyBag.prototype.clearKeyList = function() {
  this.setKeyList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sync_pb.NigoriSpecifics.prototype.toObject = function(opt_includeInstance) {
  return proto.sync_pb.NigoriSpecifics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sync_pb.NigoriSpecifics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.NigoriSpecifics.toObject = function(includeInstance, msg) {
  var obj = {
    encryptionKeybag: (f = msg.getEncryptionKeybag()) && encryption_pb.EncryptedData.toObject(includeInstance, f),
    keybagIsFrozen: jspb.Message.getField(msg, 2),
    encryptBookmarks: jspb.Message.getField(msg, 13),
    encryptPreferences: jspb.Message.getField(msg, 14),
    encryptAutofillProfile: jspb.Message.getField(msg, 15),
    encryptAutofill: jspb.Message.getField(msg, 16),
    encryptThemes: jspb.Message.getField(msg, 17),
    encryptTypedUrls: jspb.Message.getField(msg, 18),
    encryptExtensions: jspb.Message.getField(msg, 19),
    encryptSessions: jspb.Message.getField(msg, 20),
    encryptApps: jspb.Message.getField(msg, 21),
    encryptSearchEngines: jspb.Message.getField(msg, 22),
    encryptEverything: jspb.Message.getField(msg, 24),
    encryptExtensionSettings: jspb.Message.getField(msg, 25),
    encryptAppNotifications: jspb.Message.getField(msg, 26),
    encryptAppSettings: jspb.Message.getField(msg, 27),
    syncTabFavicons: jspb.Message.getField(msg, 29),
    passphraseType: jspb.Message.getFieldWithDefault(msg, 30, 1),
    keystoreDecryptorToken: (f = msg.getKeystoreDecryptorToken()) && encryption_pb.EncryptedData.toObject(includeInstance, f),
    keystoreMigrationTime: jspb.Message.getField(msg, 32),
    customPassphraseTime: jspb.Message.getField(msg, 33),
    encryptDictionary: jspb.Message.getField(msg, 34),
    encryptFaviconImages: jspb.Message.getField(msg, 35),
    encryptFaviconTracking: jspb.Message.getField(msg, 36),
    encryptArticles: jspb.Message.getField(msg, 37),
    encryptAppList: jspb.Message.getField(msg, 38),
    encryptAutofillWalletMetadata: jspb.Message.getField(msg, 39),
    serverOnlyWasMissingKeystoreMigrationTime: jspb.Message.getField(msg, 40),
    encryptArcPackage: jspb.Message.getField(msg, 41),
    encryptPrinters: jspb.Message.getField(msg, 42),
    encryptReadingList: jspb.Message.getField(msg, 43),
    encryptMountainShares: jspb.Message.getField(msg, 44),
    customPassphraseKeyDerivationMethod: jspb.Message.getFieldWithDefault(msg, 45, 0),
    customPassphraseKeyDerivationSalt: jspb.Message.getField(msg, 46),
    encryptSendTabToSelf: jspb.Message.getField(msg, 47)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sync_pb.NigoriSpecifics}
 */
proto.sync_pb.NigoriSpecifics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sync_pb.NigoriSpecifics;
  return proto.sync_pb.NigoriSpecifics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sync_pb.NigoriSpecifics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sync_pb.NigoriSpecifics}
 */
proto.sync_pb.NigoriSpecifics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new encryption_pb.EncryptedData;
      reader.readMessage(value,encryption_pb.EncryptedData.deserializeBinaryFromReader);
      msg.setEncryptionKeybag(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setKeybagIsFrozen(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptBookmarks(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptPreferences(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptAutofillProfile(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptAutofill(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptThemes(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptTypedUrls(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptExtensions(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptSessions(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptApps(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptSearchEngines(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptEverything(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptExtensionSettings(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptAppNotifications(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptAppSettings(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSyncTabFavicons(value);
      break;
    case 30:
      var value = /** @type {!proto.sync_pb.NigoriSpecifics.PassphraseType} */ (reader.readEnum());
      msg.setPassphraseType(value);
      break;
    case 31:
      var value = new encryption_pb.EncryptedData;
      reader.readMessage(value,encryption_pb.EncryptedData.deserializeBinaryFromReader);
      msg.setKeystoreDecryptorToken(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setKeystoreMigrationTime(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCustomPassphraseTime(value);
      break;
    case 34:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptDictionary(value);
      break;
    case 35:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptFaviconImages(value);
      break;
    case 36:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptFaviconTracking(value);
      break;
    case 37:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptArticles(value);
      break;
    case 38:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptAppList(value);
      break;
    case 39:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptAutofillWalletMetadata(value);
      break;
    case 40:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setServerOnlyWasMissingKeystoreMigrationTime(value);
      break;
    case 41:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptArcPackage(value);
      break;
    case 42:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptPrinters(value);
      break;
    case 43:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptReadingList(value);
      break;
    case 44:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptMountainShares(value);
      break;
    case 45:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCustomPassphraseKeyDerivationMethod(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomPassphraseKeyDerivationSalt(value);
      break;
    case 47:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptSendTabToSelf(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sync_pb.NigoriSpecifics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sync_pb.NigoriSpecifics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sync_pb.NigoriSpecifics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sync_pb.NigoriSpecifics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEncryptionKeybag();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      encryption_pb.EncryptedData.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeBool(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeBool(
      24,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeBool(
      25,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeBool(
      26,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeBool(
      27,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeBool(
      29,
      f
    );
  }
  f = /** @type {!proto.sync_pb.NigoriSpecifics.PassphraseType} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeEnum(
      30,
      f
    );
  }
  f = message.getKeystoreDecryptorToken();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      encryption_pb.EncryptedData.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeInt64(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeInt64(
      33,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeBool(
      34,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeBool(
      35,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 36));
  if (f != null) {
    writer.writeBool(
      36,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 37));
  if (f != null) {
    writer.writeBool(
      37,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 38));
  if (f != null) {
    writer.writeBool(
      38,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 39));
  if (f != null) {
    writer.writeBool(
      39,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 40));
  if (f != null) {
    writer.writeBool(
      40,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 41));
  if (f != null) {
    writer.writeBool(
      41,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 42));
  if (f != null) {
    writer.writeBool(
      42,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 43));
  if (f != null) {
    writer.writeBool(
      43,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 44));
  if (f != null) {
    writer.writeBool(
      44,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 45));
  if (f != null) {
    writer.writeInt32(
      45,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 46));
  if (f != null) {
    writer.writeString(
      46,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 47));
  if (f != null) {
    writer.writeBool(
      47,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.sync_pb.NigoriSpecifics.PassphraseType = {
  UNKNOWN: 0,
  IMPLICIT_PASSPHRASE: 1,
  KEYSTORE_PASSPHRASE: 2,
  FROZEN_IMPLICIT_PASSPHRASE: 3,
  CUSTOM_PASSPHRASE: 4
};

/**
 * @enum {number}
 */
proto.sync_pb.NigoriSpecifics.KeyDerivationMethod = {
  UNSPECIFIED: 0,
  PBKDF2_HMAC_SHA1_1003: 1,
  SCRYPT_8192_8_11: 2
};

/**
 * optional EncryptedData encryption_keybag = 1;
 * @return {?proto.sync_pb.EncryptedData}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptionKeybag = function() {
  return /** @type{?proto.sync_pb.EncryptedData} */ (
    jspb.Message.getWrapperField(this, encryption_pb.EncryptedData, 1));
};


/** @param {?proto.sync_pb.EncryptedData|undefined} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptionKeybag = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptionKeybag = function() {
  this.setEncryptionKeybag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptionKeybag = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool keybag_is_frozen = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getKeybagIsFrozen = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setKeybagIsFrozen = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearKeybagIsFrozen = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasKeybagIsFrozen = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool encrypt_bookmarks = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptBookmarks = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptBookmarks = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptBookmarks = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptBookmarks = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool encrypt_preferences = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptPreferences = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptPreferences = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptPreferences = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptPreferences = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool encrypt_autofill_profile = 15;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptAutofillProfile = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptAutofillProfile = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptAutofillProfile = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptAutofillProfile = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool encrypt_autofill = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptAutofill = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptAutofill = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptAutofill = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptAutofill = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool encrypt_themes = 17;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptThemes = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptThemes = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptThemes = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptThemes = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool encrypt_typed_urls = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptTypedUrls = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptTypedUrls = function(value) {
  jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptTypedUrls = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptTypedUrls = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool encrypt_extensions = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptExtensions = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptExtensions = function(value) {
  jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptExtensions = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptExtensions = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool encrypt_sessions = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptSessions = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptSessions = function(value) {
  jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptSessions = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptSessions = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool encrypt_apps = 21;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptApps = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 21, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptApps = function(value) {
  jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptApps = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptApps = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool encrypt_search_engines = 22;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptSearchEngines = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 22, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptSearchEngines = function(value) {
  jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptSearchEngines = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptSearchEngines = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool encrypt_everything = 24;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptEverything = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 24, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptEverything = function(value) {
  jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptEverything = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptEverything = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional bool encrypt_extension_settings = 25;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptExtensionSettings = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 25, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptExtensionSettings = function(value) {
  jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptExtensionSettings = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptExtensionSettings = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional bool encrypt_app_notifications = 26;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptAppNotifications = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 26, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptAppNotifications = function(value) {
  jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptAppNotifications = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptAppNotifications = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional bool encrypt_app_settings = 27;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptAppSettings = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 27, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptAppSettings = function(value) {
  jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptAppSettings = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptAppSettings = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional bool sync_tab_favicons = 29;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getSyncTabFavicons = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 29, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setSyncTabFavicons = function(value) {
  jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearSyncTabFavicons = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasSyncTabFavicons = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional PassphraseType passphrase_type = 30;
 * @return {!proto.sync_pb.NigoriSpecifics.PassphraseType}
 */
proto.sync_pb.NigoriSpecifics.prototype.getPassphraseType = function() {
  return /** @type {!proto.sync_pb.NigoriSpecifics.PassphraseType} */ (jspb.Message.getFieldWithDefault(this, 30, 1));
};


/** @param {!proto.sync_pb.NigoriSpecifics.PassphraseType} value */
proto.sync_pb.NigoriSpecifics.prototype.setPassphraseType = function(value) {
  jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearPassphraseType = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasPassphraseType = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional EncryptedData keystore_decryptor_token = 31;
 * @return {?proto.sync_pb.EncryptedData}
 */
proto.sync_pb.NigoriSpecifics.prototype.getKeystoreDecryptorToken = function() {
  return /** @type{?proto.sync_pb.EncryptedData} */ (
    jspb.Message.getWrapperField(this, encryption_pb.EncryptedData, 31));
};


/** @param {?proto.sync_pb.EncryptedData|undefined} value */
proto.sync_pb.NigoriSpecifics.prototype.setKeystoreDecryptorToken = function(value) {
  jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearKeystoreDecryptorToken = function() {
  this.setKeystoreDecryptorToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasKeystoreDecryptorToken = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional int64 keystore_migration_time = 32;
 * @return {number}
 */
proto.sync_pb.NigoriSpecifics.prototype.getKeystoreMigrationTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/** @param {number} value */
proto.sync_pb.NigoriSpecifics.prototype.setKeystoreMigrationTime = function(value) {
  jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearKeystoreMigrationTime = function() {
  jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasKeystoreMigrationTime = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional int64 custom_passphrase_time = 33;
 * @return {number}
 */
proto.sync_pb.NigoriSpecifics.prototype.getCustomPassphraseTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/** @param {number} value */
proto.sync_pb.NigoriSpecifics.prototype.setCustomPassphraseTime = function(value) {
  jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearCustomPassphraseTime = function() {
  jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasCustomPassphraseTime = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional bool encrypt_dictionary = 34;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptDictionary = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 34, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptDictionary = function(value) {
  jspb.Message.setField(this, 34, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptDictionary = function() {
  jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptDictionary = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional bool encrypt_favicon_images = 35;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptFaviconImages = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 35, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptFaviconImages = function(value) {
  jspb.Message.setField(this, 35, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptFaviconImages = function() {
  jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptFaviconImages = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional bool encrypt_favicon_tracking = 36;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptFaviconTracking = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 36, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptFaviconTracking = function(value) {
  jspb.Message.setField(this, 36, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptFaviconTracking = function() {
  jspb.Message.setField(this, 36, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptFaviconTracking = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional bool encrypt_articles = 37;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptArticles = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 37, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptArticles = function(value) {
  jspb.Message.setField(this, 37, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptArticles = function() {
  jspb.Message.setField(this, 37, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptArticles = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional bool encrypt_app_list = 38;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptAppList = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 38, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptAppList = function(value) {
  jspb.Message.setField(this, 38, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptAppList = function() {
  jspb.Message.setField(this, 38, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptAppList = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional bool encrypt_autofill_wallet_metadata = 39;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptAutofillWalletMetadata = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 39, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptAutofillWalletMetadata = function(value) {
  jspb.Message.setField(this, 39, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptAutofillWalletMetadata = function() {
  jspb.Message.setField(this, 39, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptAutofillWalletMetadata = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional bool server_only_was_missing_keystore_migration_time = 40;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getServerOnlyWasMissingKeystoreMigrationTime = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 40, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setServerOnlyWasMissingKeystoreMigrationTime = function(value) {
  jspb.Message.setField(this, 40, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearServerOnlyWasMissingKeystoreMigrationTime = function() {
  jspb.Message.setField(this, 40, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasServerOnlyWasMissingKeystoreMigrationTime = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional bool encrypt_arc_package = 41;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptArcPackage = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 41, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptArcPackage = function(value) {
  jspb.Message.setField(this, 41, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptArcPackage = function() {
  jspb.Message.setField(this, 41, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptArcPackage = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional bool encrypt_printers = 42;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptPrinters = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 42, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptPrinters = function(value) {
  jspb.Message.setField(this, 42, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptPrinters = function() {
  jspb.Message.setField(this, 42, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptPrinters = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional bool encrypt_reading_list = 43;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptReadingList = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 43, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptReadingList = function(value) {
  jspb.Message.setField(this, 43, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptReadingList = function() {
  jspb.Message.setField(this, 43, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptReadingList = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional bool encrypt_mountain_shares = 44;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptMountainShares = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 44, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptMountainShares = function(value) {
  jspb.Message.setField(this, 44, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptMountainShares = function() {
  jspb.Message.setField(this, 44, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptMountainShares = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional int32 custom_passphrase_key_derivation_method = 45;
 * @return {number}
 */
proto.sync_pb.NigoriSpecifics.prototype.getCustomPassphraseKeyDerivationMethod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 45, 0));
};


/** @param {number} value */
proto.sync_pb.NigoriSpecifics.prototype.setCustomPassphraseKeyDerivationMethod = function(value) {
  jspb.Message.setField(this, 45, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearCustomPassphraseKeyDerivationMethod = function() {
  jspb.Message.setField(this, 45, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasCustomPassphraseKeyDerivationMethod = function() {
  return jspb.Message.getField(this, 45) != null;
};


/**
 * optional string custom_passphrase_key_derivation_salt = 46;
 * @return {string}
 */
proto.sync_pb.NigoriSpecifics.prototype.getCustomPassphraseKeyDerivationSalt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/** @param {string} value */
proto.sync_pb.NigoriSpecifics.prototype.setCustomPassphraseKeyDerivationSalt = function(value) {
  jspb.Message.setField(this, 46, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearCustomPassphraseKeyDerivationSalt = function() {
  jspb.Message.setField(this, 46, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasCustomPassphraseKeyDerivationSalt = function() {
  return jspb.Message.getField(this, 46) != null;
};


/**
 * optional bool encrypt_send_tab_to_self = 47;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.getEncryptSendTabToSelf = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 47, false));
};


/** @param {boolean} value */
proto.sync_pb.NigoriSpecifics.prototype.setEncryptSendTabToSelf = function(value) {
  jspb.Message.setField(this, 47, value);
};


/**
 * Clears the field making it undefined.
 */
proto.sync_pb.NigoriSpecifics.prototype.clearEncryptSendTabToSelf = function() {
  jspb.Message.setField(this, 47, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sync_pb.NigoriSpecifics.prototype.hasEncryptSendTabToSelf = function() {
  return jspb.Message.getField(this, 47) != null;
};


goog.object.extend(exports, proto.sync_pb);
